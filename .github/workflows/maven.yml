name: Maven CI
on:
 push:
    branches: [ master ]
 pull_request:
    branches: [ master ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 14
      uses: actions/setup-java@v3
      with:
        java-version: 14
        distribution: 'zulu'
  
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      
   
    - name: Build and test project with Maven
      run: mvn -B package --file pom.xml

  publish-job:
      runs-on: ubuntu-latest
      needs: [build_and_test]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v3
          with:
            java-version: 14
            distribution: 'zulu'
        - run: mvn -B package --file pom.xml -DskipTests
        - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
        - uses: actions/upload-artifact@v1
          with:
            name: Package
            path: staging 
  
  docker_build_push:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_REG_USERNAME }}
        password: ${{ secrets.DOCKER_REG_PASSWORD }}
    - name: set environment variable for dockerfile path and registry
      run: |
        if [[ "${{ secrets.dockerfile-path }}" == "" ]]; then
          echo "DOCKERFILE_PATH=." >> $GITHUB_ENV
        else
          echo "DOCKERFILE_PATH=${{ secrets.dockerfile-path  }}" >> $GITHUB_ENV
        fi
        if [[ "${{ secrets.registry }}" == "" ]]; then
          echo "REGISTRY=" >> $GITHUB_ENV
        else
          echo "REGISTRY=${{ secrets.registry }}/" >> $GITHUB_ENV
        fi
        echo "image-name=github-action-maven-tutorial" >> $GITHUB_ENV
      shell: bash
    - name: set environment variable for build args
      run: |
        echo ${{ secrets.build-args }} | tr -s ',' '\n' > build-args.txt
        echo 'BUILD_ARGS<<EOF' >> $GITHUB_ENV
        cat build-args.txt >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    
    - name: Build and push
      id: build-and-push
      uses: docker/build-push-action@v3
      with:
        context: ${{ env.DOCKERFILE_PATH }}
        push: true
        build-args: |
          ${{ env.BUILD_ARGS }}
        tags: ${{ env.REGISTRY }}${{ secrets.DOCKER_REG_USERNAME }}/${{ env.image-name }}:latest
